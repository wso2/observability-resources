# -------------------------------------------------------------------------------------
#
# Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.
#
# This software is the property of WSO2 LLC. and its suppliers, if any.
# Dissemination of any information or reproduction of any material contained 
# herein is strictly forbidden, unless permitted by WSO2 in accordance with the 
# WSO2 Commercial License available at https://wso2.com/licenses/eula/3.2
#
# --------------------------------------------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "am-all-in-one.fullname" . }}-am-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    component: wso2apim
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      deployment: {{ template "am-all-in-one.fullname" . }}-am
      node: {{ template "am-all-in-one.fullname" . }}-am
  template:
    metadata:
      annotations:
        checksum.am.conf: {{ include (print $.Template.BasePath "/am/wso2am-conf.yaml") . | sha256sum }}
        checksum.am.conf.log4j2: {{ include (print $.Template.BasePath "/am/wso2am-conf-log4j2.yaml") . | sha256sum }}
        checksum.am.conf.secret-conf: {{ include (print $.Template.BasePath "/am/wso2am-conf-secret-conf.yaml") . | sha256sum }}
      labels:
        deployment: {{ template "am-all-in-one.fullname" . }}-am
        node: {{ template "am-all-in-one.fullname" . }}-am
        product: apim
        component: wso2apim
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: deployment
                  operator: In
                  values:
                  - {{ template "am-all-in-one.fullname" . }}
              topologyKey: "topology.kubernetes.io/zone"
            weight: 100
      {{- if .Values.wso2.apim.secureVaultEnabled }} 
      {{- if .Values.aws.enabled }}
      serviceAccount: {{ .Values.aws.serviceAccountName }}
      {{- else if .Values.gcp.enabled }}
      serviceAccount: {{ .Values.gcp.serviceAccountName }}
      {{- else if .Values.azure.enabled }}
      serviceAccount: {{ .Values.azure.serviceAccountName }}
      {{- end }}
      {{- end }}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: wso2am
          image: {{ .Values.wso2.deployment.image.registry }}/{{ .Values.wso2.deployment.image.repository }}@{{ .Values.wso2.deployment.image.digest }}
          imagePullPolicy: {{ .Values.wso2.deployment.imagePullPolicy }}
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: JVM_MEM_OPTS
              value: "-Xms{{ .Values.wso2.deployment.resources.jvm.memory.xms }} -Xmx{{ .Values.wso2.deployment.resources.jvm.memory.xmx }}"
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: {{ .Values.wso2.deployment.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.deployment.startupProbe.failureThreshold }}         
          livenessProbe:
            httpGet:
              path: /services/Version
              port: 9763
            initialDelaySeconds: {{ .Values.wso2.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.deployment.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /api/am/gateway/v2/server-startup-healthcheck
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.wso2.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.deployment.readinessProbe.failureThreshold }}
          lifecycle:
            preStop:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - >
                    echo "Pre stop hook triggered";
                    sleep {{ .Values.wso2.deployment.lifecycle.preStopHook.sleepSeconds }}; 
                    echo "Shutdown APIM Server";
                    ${WSO2_SERVER_HOME}/bin/api-manager.sh stop
          resources:
            requests:
              memory: {{ .Values.wso2.deployment.resources.requests.memory }}
              cpu: {{ .Values.wso2.deployment.resources.requests.cpu }}
            limits:
              memory: {{ .Values.wso2.deployment.resources.limits.memory }}
              cpu: {{ .Values.wso2.deployment.resources.limits.cpu }}
          securityContext:
            runAsUser: {{ .Values.kubernetes.securityContext.runAsUser }}
            runAsGroup: {{ .Values.kubernetes.securityContext.runAsGroup }}
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          ports:
            - containerPort: 8280
              protocol: "TCP"
            - containerPort: 8243
              protocol: "TCP"
            - containerPort: 9763
              protocol: "TCP"
            - containerPort: 9443
              protocol: "TCP"
            - containerPort: 9711
              protocol: "TCP"
            - containerPort: 9611
              protocol: "TCP"
            - containerPort: 5672
              protocol: "TCP"
          volumeMounts:
            - name: wso2am-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
              subPath: deployment.toml
            - name: wso2am-entrypoint
              mountPath: /home/wso2carbon/docker-entrypoint.sh
              subPath: docker-entrypoint.sh
            - name: wso2am-log4j2
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/log4j2.properties
              subPath: log4j2.properties
            {{- if .Values.wso2.apim.mountStartupScript }}
            - name: wso2am-sh-conf
              mountPath: /home/wso2carbon/wso2-config-volume/bin/api-manager.sh
              subPath: api-manager.sh
            {{- end }}
            {{- if .Values.wso2.apim.secureVaultEnabled }}
            - name: wso2am-secret-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/security/secret-conf.properties
              subPath: secret-conf.properties
            - name: wso2am-secret-store-csi
              mountPath: /mnt/secrets-store
              readOnly: true
            {{- end }}
            {{- if .Values.wso2.apim.configurations.security.jksSecretName }}
            - name: wso2am-keystores
              mountPath: /home/wso2carbon/wso2-config-volume/repository/resources/security/{{ .Values.wso2.apim.configurations.security.truststore.name }}
              subPath: {{ .Values.wso2.apim.configurations.security.truststore.name }}
            {{- if .Values.wso2.apim.configurations.security.keystores.primary.enabled }}
            - name: wso2am-keystores
              mountPath: /home/wso2carbon/wso2-config-volume/repository/resources/security/{{ .Values.wso2.apim.configurations.security.keystores.primary.name }}
              subPath: {{ .Values.wso2.apim.configurations.security.keystores.primary.name }}
            {{- end }}
            {{- if .Values.wso2.apim.configurations.security.keystores.tls.enabled }}
            - name: wso2am-keystores
              mountPath: /home/wso2carbon/wso2-config-volume/repository/resources/security/{{ .Values.wso2.apim.configurations.security.keystores.tls.name }}
              subPath: {{ .Values.wso2.apim.configurations.security.keystores.tls.name }}
            {{- end }}
            {{- if .Values.wso2.apim.configurations.security.keystores.internal.enabled }}
            - name: wso2am-keystores
              mountPath: /home/wso2carbon/wso2-config-volume/repository/resources/security/{{ .Values.wso2.apim.configurations.security.keystores.internal.name }}
              subPath: {{ .Values.wso2.apim.configurations.security.keystores.internal.name }}
            {{- end }}
            {{- end }}
            {{ if .Values.wso2.deployment.persistence.solrIndexing.enabled }}
            - name: wso2am-local-carbondb
              mountPath: /home/wso2carbon/solr/database
            - name: wso2am-solr
              mountPath: /home/wso2carbon/solr/indexed-data
            {{ end }}
      {{- if .Values.wso2.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.wso2.deployment.nodeSelector | nindent 8 }}
      {{- end }}
      volumes:
        - name: wso2am-conf
          configMap:
            name: {{ template "am-all-in-one.fullname" . }}-am-conf
            defaultMode: 0407
        - name: wso2am-entrypoint
          configMap:
            name: {{ template "am-all-in-one.fullname" . }}-conf-entrypoint
            defaultMode: 0407
        - name: wso2am-log4j2
          configMap:
            name: {{ template "am-all-in-one.fullname" . }}-conf-log4j2
            defaultMode: 0407
        {{- if .Values.wso2.apim.mountStartupScript }}
        - name: wso2am-sh-conf
          configMap:
            name: {{ template "am-all-in-one.fullname" . }}-conf-sh
            defaultMode: 0407
        {{- end }}
        {{- if .Values.wso2.apim.secureVaultEnabled }}
        - name: wso2am-secret-conf
          configMap:
            name: {{ template "am-all-in-one.fullname" . }}-conf-secret-conf
            defaultMode: 0407
        - name: wso2am-secret-store-csi
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            {{ if .Values.azure.enabled }}
            volumeAttributes:
              secretProviderClass: {{ .Values.azure.keyVault.secretProviderClass }}
            nodePublishSecretRef:
              name: {{ .Values.azure.keyVault.activeDirectory.servicePrincipal.credentialsSecretName }}
            {{- else if .Values.aws.enabled }}
            volumeAttributes:
              secretProviderClass: {{ .Values.aws.secretsManager.secretProviderClass }}
            {{- else if .Values.gcp.enabled }}
            volumeAttributes:
              secretProviderClass: {{ .Values.gcp.secretsManager.secretProviderClass }}
            {{- end }}
        {{- end }}
        {{- if .Values.wso2.apim.configurations.security.jksSecretName }}
        - name: wso2am-keystores
          secret:
            secretName: {{ .Values.wso2.apim.configurations.security.jksSecretName }}
        {{- end }}
        {{ if .Values.wso2.deployment.persistence.solrIndexing.enabled }}
        - name: wso2am-local-carbondb
          persistentVolumeClaim:
            claimName: {{ template "am-all-in-one.fullname" . }}-am-local-carbon-database-volume-claim
        - name: wso2am-solr
          persistentVolumeClaim:
            claimName: {{ template "am-all-in-one.fullname" . }}-am-solr-indexed-data-volume-claim
        {{ end }}
