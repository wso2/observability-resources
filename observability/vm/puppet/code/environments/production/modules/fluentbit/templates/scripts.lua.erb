function construct_mi_app_name(tag, timestamp, record)
    if record["deployment"] == "none" then
        record["deployment"] = nil
    end

    if record["deployment"] and record["package"] then
        record["app"] = record["deployment"] .. " - " .. record["package"]
    elseif record["deployment"] then
        record["app"] = record["deployment"]
    elseif record["package"] then
        record["app"] = record["package"]
    else
        record["app"] = "unknown"
    end
    return 1, timestamp, record
end

function construct_bal_app_name(tag, timestamp, record)
    if record["deployment"] == "none" then
        record["deployment"] = nil
    end

    local moduleName = record["module"]
    if record["src.module"] then
        moduleName = record["src.module"]
    end

    if record["deployment"] then
        record["app"] = record["deployment"] .. " - " .. moduleName
    else
        record["app"] = moduleName 
    end
    return 1, timestamp, record
end

function extract_bal_metrics_data(tag, timestamp, record)
    local transport = record["protocol"] or "Unknown"
    local integration = record["src.object.name"] or "Unknown"
    if record["src.main"] == "true" then
        integration = "main"
    end
    local sublevel = record["entrypoint.function.name"] or ""
    local method = record["http.method"] or ""
    local response_time = record["response_time_seconds"] or 0
    local status = "successful"
    if record["http.status_code_group"] == "4xx" or record["http.status_code_group"] == "5xx" then
        status = "failed"
    end

    response_time = response_time * 1000
    response_time = math.floor(response_time)

    record["response_time"] = response_time
    record["status"] = status
    record["protocol"] = transport
    record["integration"] = integration
    record["sublevel"] = sublevel
    record["method"] = method

    return 1, timestamp, record
end

function extract_metrics_data(tag, timestamp, record)
    local transport = "Unknown"
    local integration = "Unknown"
    local sublevel = ""
    local method = ""
    local response_time = 0
    local status = "successful"

    if record["payload"] then
        local payload = record["payload"]
        response_time = payload["latency"]
        if payload["failure"] == "true" then
            status = "failed"
        end

        if payload["apiDetails"] then
            integration = payload["apiDetails"]["api"]
            sublevel = payload["apiDetails"]["subRequestPath"]
            method = payload["apiDetails"]["method"]
            transport = payload["apiDetails"]["transport"]
        elseif payload["inboundEndpointDetails"] then
            local details = payload["inboundEndpointDetails"]
            integration = details["name"]
            transport = details["protocol"]
        else
            record["log_status"] = "discarded"
        end
    end

    record["payload"] = ""
    record["response_time"] = response_time
    record["status"] = status
    record["protocol"] = transport
    record["integration"] = integration
    record["sublevel"] = sublevel
    record["method"] = method
    
    return 1, timestamp, record
end
